{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/ff7ede0c-bf8b-40c0-b5c3-885f3708fb65')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/ff7ede0c-bf8b-40c0-b5c3-885f3708fb65')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2021-09-01-preview",
            "properties": {
                "displayName": "Tracking priv accounts with watchlist",
                "description": "adapted from https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/TrackingPrivAccounts.yaml adding support for watchlist",
                "severity": "Medium",
                "enabled": true,
                "query": "let LocalSID = \"S-1-5-32-5[0-9][0-9]$\";\r\n  let GroupSID = \"S-1-5-21-[0-9]*-[0-9]*-[0-9]*-5[0-9][0-9]$|S-1-5-21-[0-9]*-[0-9]*-[0-9]*-1102$|S-1-5-21-[0-9]*-[0-9]*-[0-9]*-1103$\";\r\n  let p_Accounts = SecurityEvent\r\n  | where EventID in (\"4728\", \"4732\", \"4756\") and AccountType == \"User\" and MemberName == \"-\"\r\n  // Exclude Remote Desktop Users group: S-1-5-32-555 and IIS Users group S-1-5-32-568\r\n  | where TargetSid !in (\"S-1-5-32-555\", \"S-1-5-32-568\")\r\n  | where TargetSid matches regex LocalSID or TargetSid matches regex GroupSID\r\n  | summarize by DomainSlashAccount = tolower(SubjectAccount), NtDomain = SubjectDomainName,\r\n  AccountAtDomain = tolower(strcat(SubjectUserName,\"@\",SubjectDomainName)), AccountName = tolower(SubjectUserName);\r\n  // Build custom high value account list\r\n//  let cust_Accounts = datatable(Account:string, NtDomain:string, Domain:string)[\r\n//  \"john\", \"Contoso\", \"contoso.com\",  \"greg\", \"Contoso\", \"contoso.com\",  \"larry\", \"Domain\", \"contoso.com\"];\r\n//let c_Accounts = cust_Accounts\r\nlet c_Accounts = _GetWatchlist('adminitaccounts') \r\n  | extend AccountAtDomain = tolower(strcat(Account,\"@\",Domain)), AccountName = tolower(Account),\r\n  DomainSlashAccount = tolower(strcat(NtDomain,\"\\\\\",Account));\r\n  let AccountFormat = p_Accounts | union c_Accounts | project AccountName, AccountAtDomain, DomainSlashAccount;\r\n  // Normalize activity from diverse sources into common schema using a function\r\n  let activity = view (a_StartTime:datetime, a_EndTime:datetime) {\r\n  (union isfuzzy=true\r\n  (AccountFormat | join kind=inner\r\n  (AWSCloudTrail\r\n  | where TimeGenerated >= a_StartTime and TimeGenerated <= a_EndTime\r\n  | extend ClientIP = \"-\", AccountName = tolower(UserIdentityUserName), WinSecEventDomain = \"-\"\r\n  | project-rename EventType = EventName, ServiceOrSystem = EventSource)\r\n  on AccountName),\r\n  (AccountFormat | join kind=inner\r\n  (SigninLogs\r\n  | where TimeGenerated >= a_StartTime and TimeGenerated <= a_EndTime\r\n  | extend AccountName = tolower(split(UserPrincipalName, \"@\")[0]), WinSecEventDomain = \"-\"\r\n  | project-rename EventType = strcat(OperationName, \"-\", ResultType, \"-\", ResultDescription), ServiceOrSystem = AppDisplayName, ClientIP = IPAddress)\r\n  on AccountName),\r\n  (AccountFormat | join kind=inner\r\n  (OfficeActivity\r\n  | where TimeGenerated >= a_StartTime and TimeGenerated <= a_EndTime\r\n  | extend AccountName = tolower(split(UserId, \"@\")[0]), WinSecEventDomain = \"-\"\r\n  | project-rename EventType = strcat(Operation, \"-\", ResultStatus), ServiceOrSystem = OfficeWorkload)\r\n  on AccountName),\r\n  (AccountFormat | join kind=inner\r\n  (SecurityEvent\r\n  | where TimeGenerated >= a_StartTime and TimeGenerated <= a_EndTime\r\n  | where EventID in (4624, 4625)\r\n  | extend ClientIP = \"-\"\r\n  | extend AccountName = tolower(split(Account,\"\\\\\")[1]), Domain = tolower(split(Account,\"\\\\\")[0])\r\n  | project-rename EventType = Activity, ServiceOrSystem = Computer, WinSecEventDomain = Domain)\r\n  on AccountName),\r\n  (AccountFormat | join kind=inner\r\n  (W3CIISLog\r\n  | where TimeGenerated >= a_StartTime and TimeGenerated <= a_EndTime\r\n  | where csUserName != \"-\" and isnotempty(csUserName)\r\n  | extend AccountName = tolower(csUserName), WinSecEventDomain = \"-\"\r\n  | project-rename EventType = csMethod, ServiceOrSystem = sSiteName, ClientIP = cIP)\r\n  on AccountName),\r\n  (AccountFormat | join kind=inner\r\n  (W3CIISLog\r\n  | where TimeGenerated >= a_StartTime and TimeGenerated <= a_EndTime\r\n  | where csUserName != \"-\" and isnotempty(csUserName)\r\n  | extend AccountAtDomain = tolower(csUserName), WinSecEventDomain = \"-\"\r\n  | project-rename EventType = csMethod, ServiceOrSystem = sSiteName, ClientIP = cIP)\r\n  on AccountAtDomain));\r\n  };\r\n  // Rare activity today versus prior week\r\n  let LastDay = startofday(ago(1d));\r\n  let PrevDay = endofday(ago(2d));\r\n  let Prev7Day = startofday(ago(8d));\r\n  let ra_LastDay = activity(LastDay, now())\r\n  | summarize ra_StartTime = min(TimeGenerated), ra_EndTime = max(TimeGenerated),\r\n  ra_Count = count() by Type, AccountName, EventType, ClientIP, ServiceOrSystem, WinSecEventDomain;\r\n  let a_7day = activity(Prev7Day, PrevDay)\r\n  | summarize ha_Count = count() by Type, AccountName, EventType, ClientIP, ServiceOrSystem, WinSecEventDomain;\r\n  let ra_Today = ra_LastDay | join kind=leftanti (a_7day) on Type, AccountName, ServiceOrSystem\r\n  | extend RareServiceOrSystem = ServiceOrSystem;\r\n  // Retrieve related activity as context\r\n  let a_Related =\r\n  (union isfuzzy=true\r\n  (// Make sure we at least publish the unusual activity we identified above - even if no related context activity is found in the subsequent union\r\n  ra_Today),\r\n  // Remaining elements of the union look for related activity\r\n  (ra_Today | join kind=inner\r\n  (OfficeActivity\r\n  | where TimeGenerated > LastDay\r\n  | summarize rel_StartTime = min(TimeGenerated), rel_EndTime = max(TimeGenerated), rel_ServiceOrSystemCount = dcount(OfficeWorkload),\r\n  rel_ServiceOrSystemSet = makeset(OfficeWorkload), rel_ClientIPSet = makeset(ClientIP),\r\n  rel_Count = count() by AccountName = tolower(UserId), rel_EventType = Operation, Type\r\n  ) on AccountName),\r\n  (ra_Today | join kind=inner\r\n  (SecurityEvent | where TimeGenerated > LastDay\r\n  | where EventID in (4624, 4625)\r\n  | where AccountType == \"User\"\r\n  | summarize rel_StartTime = min(TimeGenerated), rel_EndTime = max(TimeGenerated), rel_ServiceOrSystemCount = dcount(Computer),\r\n  rel_ServiceOrSystemSet = makeset(Computer), rel_ClientIPSet = makeset(\"-\"),\r\n  rel_Count = count() by DomainSlashAccount = tolower(Account), rel_EventType = Activity, Type\r\n  ) on DomainSlashAccount),\r\n  (ra_Today | join kind=inner\r\n  (Event | where TimeGenerated > LastDay\r\n  // 7045: A service was installed in the system\r\n  | where EventID == 7045\r\n  | summarize rel_StartTime = min(TimeGenerated), rel_EndTime = max(TimeGenerated), rel_ServiceOrSystemCount = dcount(Computer),\r\n  rel_ServiceOrSystemSet = makeset(Computer), rel_ClientIPSet = makeset(\"-\"),\r\n  rel_Count = count() by DomainSlashAccount = tolower(UserName), rel_EventType = strcat(EventID, \"-\", tostring(split(RenderedDescription,\".\")[0])), Type\r\n  ) on DomainSlashAccount),\r\n  (ra_Today | join kind=inner\r\n  (SecurityEvent | where TimeGenerated > LastDay\r\n  // 4720: Account created, 4726: Account deleted\r\n  | where EventID in (4720,4726)\r\n  | summarize rel_StartTime = min(TimeGenerated), rel_EndTime = max(TimeGenerated), rel_ServiceOrSystemCount = dcount(UserPrincipalName),\r\n  rel_ServiceOrSystemSet = makeset(UserPrincipalName), rel_ClientIPSet = makeset(\"-\"),\r\n  rel_Count = count() by DomainSlashAccount = tolower(Account), rel_EventType = Activity, Type\r\n  ) on DomainSlashAccount),\r\n  (ra_Today | join kind=inner\r\n  (SigninLogs | where TimeGenerated > LastDay\r\n  | extend RemoteHost = tolower(tostring(parse_json(DeviceDetail.[\"displayName\"])))\r\n  | extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser, StatusCode = tostring(Status.errorCode),\r\n  StatusDetails = tostring(Status.additionalDetails), State = tostring(LocationDetails.state)\r\n  | summarize rel_StartTime = min(TimeGenerated), rel_EndTime = max(TimeGenerated), a_RelatedRemoteHostSet = makeset(RemoteHost),\r\n  rel_ServiceOrSystemSet = makeset(AppDisplayName), rel_ServiceOrSystemCount = dcount(AppDisplayName), rel_ClientIPSet = makeset(IPAddress),\r\n  rel_StateSet = makeset(State),\r\n  rel_Count = count() by AccountAtDomain = tolower(UserPrincipalName), rel_EventType = iff(isnotempty(ResultDescription), ResultDescription, StatusDetails), Type\r\n  ) on AccountAtDomain),\r\n  (ra_Today | join kind=inner\r\n  (AWSCloudTrail | where TimeGenerated > LastDay\r\n  | summarize rel_StartTime = min(TimeGenerated),rel_EndTime = max(TimeGenerated), rel_ServiceOrSystemSet = makeset(EventSource),\r\n  rel_ServiceOrSystemCount = dcount(EventSource), rel_ClientIPSet = makeset(\"-\"),\r\n  rel_Count= count() by AccountName = tolower(UserIdentityUserName), rel_EventType = EventName, Type\r\n  ) on AccountName),\r\n  (ra_Today | join kind=inner\r\n  (SecurityAlert | where TimeGenerated > LastDay\r\n  | extend ExtProps=parse_json(ExtendedProperties)\r\n  | extend AccountName = tostring(ExtProps.[\"user name\"])\r\n  | summarize rel_StartTime = min(TimeGenerated), rel_EndTime = max(TimeGenerated), rel_ServiceOrSystemCount = dcount(AlertType),\r\n  rel_ServiceOrSystemSet = makeset(AlertType),\r\n  rel_Count = count() by DomainSlashAccount = tolower(AccountName), rel_EventType = ProductName, Type\r\n  ) on DomainSlashAccount)\r\n  );\r\n  a_Related\r\n  | project Type, RareActivtyStartTimeUtc = ra_StartTime, RareActivityEndTimeUtc = ra_EndTime, RareActivityCount = ra_Count,\r\n  AccountName, WinSecEventDomain, EventType, RareServiceOrSystem, RelatedActivityStartTimeUtc = rel_StartTime,\r\n  RelatedActivityEndTimeUtc = rel_EndTime, RelatedActivityEventType = rel_EventType, RelatedActivityClientIPSet = rel_ClientIPSet,\r\n  RelatedActivityServiceOrSystemCount = rel_ServiceOrSystemCount, RelatedActivityServiceOrSystemSet = rel_ServiceOrSystemSet, RelatedActivityCount = rel_Count\r\n  | extend timestamp = RareActivtyStartTimeUtc, AccountCustomEntity = AccountName",
                "queryFrequency": "PT15M",
                "queryPeriod": "PT15M",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "tactics": [],
                "techniques": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": null,
                "customDetails": null,
                "entityMappings": null
            }
        }
    ]
}