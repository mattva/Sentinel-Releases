{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "BuildNewIPList": {
                "actions": {
                    "Append_to_array_variable": {
                        "inputs": {
                            "name": "NewIPList",
                            "value": "@items('BuildNewIPList')?['Address']"
                        },
                        "runAfter": {},
                        "type": "AppendToArrayVariable"
                    }
                },
                "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                "runAfter": {
                    "NewIPList": [
                        "Succeeded"
                    ]
                },
                "type": "Foreach"
            },
            "Condition": {
                "actions": {
                    "OriginalRule": {
                        "inputs": "@first(body('Filter_array'))",
                        "runAfter": {},
                        "type": "Compose"
                    },
                    "OtherRules": {
                        "inputs": {
                            "from": "@body('Parse_WafPolicy')['properties']['customRules']['rules']",
                            "where": "@not(equals(item()?['name'], outputs('RuleName')))"
                        },
                        "runAfter": {
                            "UpdatedRule": [
                                "Succeeded"
                            ]
                        },
                        "type": "Query"
                    },
                    "Put_Updated_Policy": {
                        "inputs": {
                            "authentication": {
                                "audience": "https://management.azure.com",
                                "type": "ManagedServiceIdentity"
                            },
                            "body": "@outputs('UpdatedPolicy')",
                            "method": "PUT",
                            "uri": "https://management.azure.com/subscriptions/@{parameters('subscription')}/resourceGroups/@{parameters('ResourceGroup')}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/@{parameters('WAFPolicy')}?api-version=2020-11-01"
                        },
                        "runAfter": {
                            "UpdatedPolicy": [
                                "Succeeded"
                            ]
                        },
                        "type": "Http"
                    },
                    "UpdateMatchConditions": {
                        "inputs": {
                            "from": "@outputs('OriginalRule')['matchConditions']",
                            "select": {
                                "matchValue": "@union(item()['matchValue'],variables('NewIPList'))",
                                "matchVariable": "@item()['matchVariable']",
                                "negateCondition": "@item()['negateCondition']",
                                "operator": "@item()['operator']",
                                "selector": "@item()['selector']",
                                "transforms": "@item()['transforms']"
                            }
                        },
                        "runAfter": {
                            "OriginalRule": [
                                "Succeeded"
                            ]
                        },
                        "type": "Select"
                    },
                    "UpdatedPolicy": {
                        "inputs": "@setProperty(body('Parse_WafPolicy'),'properties',setProperty(body('Parse_WafPolicy')['properties'],'customRules',setProperty(body('Parse_WafPolicy')['properties']['customRules'], 'rules', outputs('UpdatedRuleAdded'))))",
                        "runAfter": {
                            "UpdatedRuleAdded": [
                                "Succeeded"
                            ]
                        },
                        "type": "Compose"
                    },
                    "UpdatedRule": {
                        "inputs": [
                            "@setProperty(outputs('OriginalRule'), 'matchConditions', body('UpdateMatchConditions'))"
                        ],
                        "runAfter": {
                            "UpdateMatchConditions": [
                                "Succeeded"
                            ]
                        },
                        "type": "Compose"
                    },
                    "UpdatedRuleAdded": {
                        "inputs": "@union(body('OtherRules'),outputs('UpdatedRule'))",
                        "runAfter": {
                            "OtherRules": [
                                "Succeeded"
                            ]
                        },
                        "type": "Compose"
                    }
                },
                "description": "Check if Policy already has a DefaultDeny Rule, otherwise create it",
                "else": {
                    "actions": {
                        "New_CustomRules": {
                            "inputs": [
                                {
                                    "action": "Block",
                                    "enabledState": "Enabled",
                                    "matchConditions": [
                                        {
                                            "matchValue": "@variables('NewIPList')",
                                            "matchVariable": "RemoteAddr",
                                            "negateCondition": false,
                                            "operator": "IPMatch",
                                            "selector": null,
                                            "transforms": []
                                        }
                                    ],
                                    "name": "DefaultDeny",
                                    "priority": 999,
                                    "rateLimitDurationInMinutes": 0,
                                    "rateLimitThreshold": 0,
                                    "ruleType": "MatchRule"
                                }
                            ],
                            "runAfter": {},
                            "type": "Compose"
                        },
                        "Put_Updated_Policy_New": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.azure.com",
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": "@outputs('UpdatedPolicyNew')",
                                "method": "PUT",
                                "uri": "https://management.azure.com/subscriptions/@{parameters('subscription')}/resourceGroups/@{parameters('ResourceGroup')}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/@{parameters('WAFPolicy')}?api-version=2020-11-01"
                            },
                            "runAfter": {
                                "UpdatedPolicyNew": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "UpdatedPolicyNew": {
                            "inputs": {
                                "location": "@body('Parse_WafPolicy')['location']",
                                "properties": {
                                    "customRules": {
                                        "rules": "@union(body('Parse_WafPolicy')?['properties']?['customRules']?['rules'],outputs('New_customRules'))"
                                    },
                                    "managedRules": "@body('Parse_WafPolicy')['properties']['managedRules']",
                                    "policySettings": "@body('Parse_WafPolicy')['properties']['policySettings']"
                                },
                                "sku": "@body('Parse_WafPolicy')['sku']"
                            },
                            "runAfter": {
                                "New_CustomRules": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose"
                        }
                    }
                },
                "expression": {
                    "and": [
                        {
                            "greater": [
                                "@length(body('Filter_array'))",
                                0
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "Filter_array": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "Entities_-_Get_IPs": {
                "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                        }
                    },
                    "method": "post",
                    "path": "/entities/ip"
                },
                "runAfter": {},
                "type": "ApiConnection"
            },
            "Filter_array": {
                "description": "Get DefaultDeny rule JSON definition, if rule exists",
                "inputs": {
                    "from": "@body('Parse_WafPolicy')['properties']['customRules']['rules']",
                    "where": "@equals(item()?['name'], outputs('RuleName'))"
                },
                "runAfter": {
                    "Parse_WafPolicy": [
                        "Succeeded"
                    ]
                },
                "type": "Query"
            },
            "Get_Waf_Policy": {
                "inputs": {
                    "authentication": {
                        "audience": "https://management.azure.com",
                        "type": "ManagedServiceIdentity"
                    },
                    "method": "GET",
                    "uri": "https://management.azure.com/subscriptions/@{parameters('subscription')}/resourceGroups/@{parameters('ResourceGroup')}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/@{parameters('WAFPolicy')}?api-version=2020-11-01"
                },
                "runAfter": {
                    "RuleName": [
                        "Succeeded"
                    ]
                },
                "type": "Http"
            },
            "IPList": {
                "inputs": {
                    "variables": [
                        {
                            "name": "IPList",
                            "type": "array"
                        }
                    ]
                },
                "runAfter": {
                    "Entities_-_Get_IPs": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "NewIPList": {
                "inputs": {
                    "variables": [
                        {
                            "name": "NewIPList",
                            "type": "array"
                        }
                    ]
                },
                "runAfter": {
                    "IPList": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Parse_WafPolicy": {
                "description": "Get JSON object from WAF policy",
                "inputs": {
                    "content": "@body('Get_Waf_Policy')",
                    "schema": {
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "properties": {
                                "properties": {
                                    "customRules": {
                                        "properties": {
                                            "rules": {
                                                "items": {
                                                    "properties": {
                                                        "action": {
                                                            "type": "string"
                                                        },
                                                        "enabledState": {
                                                            "type": "string"
                                                        },
                                                        "matchConditions": {
                                                            "items": {
                                                                "properties": {
                                                                    "matchValue": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "matchVariable": {
                                                                        "type": "string"
                                                                    },
                                                                    "negateCondition": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "operator": {
                                                                        "type": "string"
                                                                    },
                                                                    "selector": {},
                                                                    "transforms": {
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "matchVariable",
                                                                    "operator",
                                                                    "negateCondition",
                                                                    "matchValue",
                                                                    "transforms"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "priority": {
                                                            "type": "integer"
                                                        },
                                                        "rateLimitDurationInMinutes": {
                                                            "type": [
                                                                "integer",
                                                                "null"
                                                            ]
                                                        },
                                                        "rateLimitThreshold": {
                                                            "type": [
                                                                "integer",
                                                                "null"
                                                            ]
                                                        },
                                                        "ruleType": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "enabledState",
                                                        "priority",
                                                        "ruleType",
                                                        "rateLimitDurationInMinutes",
                                                        "rateLimitThreshold",
                                                        "matchConditions",
                                                        "action"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "frontendEndpointLinks": {
                                        "type": "array"
                                    },
                                    "managedRules": {
                                        "properties": {
                                            "managedRuleSets": {
                                                "items": {
                                                    "properties": {
                                                        "exclusions": {
                                                            "type": "array"
                                                        },
                                                        "ruleGroupOverrides": {
                                                            "type": "array"
                                                        },
                                                        "ruleSetAction": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "ruleSetType": {
                                                            "type": "string"
                                                        },
                                                        "ruleSetVersion": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "ruleSetType",
                                                        "ruleSetVersion",
                                                        "ruleSetAction",
                                                        "ruleGroupOverrides",
                                                        "exclusions"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "policySettings": {
                                        "properties": {
                                            "customBlockResponseBody": {},
                                            "customBlockResponseStatusCode": {},
                                            "enabledState": {
                                                "type": "string"
                                            },
                                            "mode": {
                                                "type": "string"
                                            },
                                            "redirectUrl": {},
                                            "requestBodyCheck": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "provisioningState": {
                                        "type": "string"
                                    },
                                    "resourceState": {
                                        "type": "string"
                                    },
                                    "routingRuleLinks": {
                                        "type": "array"
                                    },
                                    "securityPolicyLinks": {
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "sku": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "tags": {
                                "properties": {},
                                "type": "object"
                            },
                            "type": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "Get_Waf_Policy": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            },
            "RuleName": {
                "description": "Rule to create or update",
                "inputs": "DefaultDeny",
                "runAfter": {
                    "BuildNewIPList": [
                        "Succeeded"
                    ]
                },
                "type": "Compose"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            },
            "ResourceGroup": {
                "defaultValue": "Resource Group Name",
                "type": "String"
            },
            "WAFPolicy": {
                "defaultValue": "WAF Policy name",
                "type": "String"
            },
            "subscription": {
                "defaultValue": "subscription ID",
                "type": "String"
            }
        },
        "triggers": {
            "Microsoft_Sentinel_alert": {
                "inputs": {
                    "body": {
                        "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                        }
                    },
                    "path": "/subscribe"
                },
                "type": "ApiConnectionWebhook"
            }
        }
    },
    "parameters": {
        "$connections": {
            "value": {
                "azuresentinel": {
                    "connectionId": "/subscriptions/@{parameters('subscription')}/resourceGroups/@{parameters('ResourceGroup')}/providers/Microsoft.Web/connections/azuresentinel-AddIPToWAFDenyCustomRule",
                    "connectionName": "azuresentinel-AddIPToWAFDenyCustomRule",
                    "connectionProperties": {
                        "authentication": {
                            "type": "ManagedServiceIdentity"
                        }
                    },
                    "id": "/subscriptions/@{parameters('subscription')}/providers/Microsoft.Web/locations/northeurope/managedApis/azuresentinel"
                }
            }
        }
    }
}